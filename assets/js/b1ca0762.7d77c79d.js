(window.webpackJsonp=window.webpackJsonp||[]).push([[34],{104:function(e,n,r){"use strict";r.r(n),r.d(n,"frontMatter",(function(){return i})),r.d(n,"metadata",(function(){return p})),r.d(n,"toc",(function(){return c})),r.d(n,"default",(function(){return l}));var t=r(3),a=r(7),o=(r(0),r(118)),i={title:"Read Parametes in ETL Job",sidebar_label:"Read Parameters"},p={unversionedId:"snippets/readparams/read-parameters-py",id:"snippets/readparams/read-parameters-py",isDocsHomePage:!1,title:"Read Parametes in ETL Job",description:'`python title="readParams.py"',source:"@site/docs/snippets/readparams/read-parameters-py.mdx",slug:"/snippets/readparams/read-parameters-py",permalink:"/workshop/docs/snippets/readparams/read-parameters-py",version:"current",sidebar_label:"Read Parameters",sidebar:"snippets",previous:{title:"helloworld.cpp",permalink:"/workshop/docs/snippets/helloworld/helloworld-cpp"}},c=[],s={toc:c};function l(e){var n=e.components,r=Object(a.a)(e,["components"]);return Object(o.b)("wrapper",Object(t.a)({},s,r,{components:n,mdxType:"MDXLayout"}),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-python",metastring:'title="readParams.py"',title:'"readParams.py"'},'import os, traceback, json, configparser, boto3\nfrom aws_xray_sdk.core import patch_all\npatch_all()\n\n# Initialize boto3 client at global scope for connection reuse\nclient = boto3.client(\'ssm\')\nenv = os.environ[\'ENV\']\napp_config_path = os.environ[\'APP_CONFIG_PATH\']\nfull_config_path = \'/\' + env + \'/\' + app_config_path\n# Initialize app at global scope for reuse across invocations\napp = None\n\nclass MyApp:\n    def __init__(self, config):\n        """\n        Construct new MyApp with configuration\n        :param config: application configuration\n        """\n        self.config = config\n\n    def get_config(self):\n        return self.config\n\ndef load_config(ssm_parameter_path):\n    """\n    Load configparser from config stored in SSM Parameter Store\n    :param ssm_parameter_path: Path to app config in SSM Parameter Store\n    :return: ConfigParser holding loaded config\n    """\n    configuration = configparser.ConfigParser()\n    try:\n        # Get all parameters for this app\n        param_details = client.get_parameters_by_path(\n            Path=ssm_parameter_path,\n            Recursive=False,\n            WithDecryption=True\n        )\n\n        # Loop through the returned parameters and populate the ConfigParser\n        if \'Parameters\' in param_details and len(param_details.get(\'Parameters\')) > 0:\n            for param in param_details.get(\'Parameters\'):\n                param_path_array = param.get(\'Name\').split("/")\n                section_position = len(param_path_array) - 1\n                section_name = param_path_array[section_position]\n                config_values = json.loads(param.get(\'Value\'))\n                config_dict = {section_name: config_values}\n                print("Found configuration: " + str(config_dict))\n                configuration.read_dict(config_dict)\n\n    except:\n        print("Encountered an error loading config from SSM.")\n        traceback.print_exc()\n    finally:\n        return configuration\n\ndef lambda_handler(event, context):\n    global app\n    # Initialize app if it doesn\'t yet exist\n    if app is None:\n        print("Loading config and creating new MyApp...")\n        config = load_config(full_config_path)\n        app = MyApp(config)\n\n    return "MyApp config is " + str(app.get_config()._sections)\n')))}l.isMDXComponent=!0},118:function(e,n,r){"use strict";r.d(n,"a",(function(){return f})),r.d(n,"b",(function(){return m}));var t=r(0),a=r.n(t);function o(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function i(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function p(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?i(Object(r),!0).forEach((function(n){o(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function c(e,n){if(null==e)return{};var r,t,a=function(e,n){if(null==e)return{};var r,t,a={},o=Object.keys(e);for(t=0;t<o.length;t++)r=o[t],n.indexOf(r)>=0||(a[r]=e[r]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)r=o[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=a.a.createContext({}),l=function(e){var n=a.a.useContext(s),r=n;return e&&(r="function"==typeof e?e(n):p(p({},n),e)),r},f=function(e){var n=l(e.components);return a.a.createElement(s.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return a.a.createElement(a.a.Fragment,{},n)}},d=a.a.forwardRef((function(e,n){var r=e.components,t=e.mdxType,o=e.originalType,i=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),f=l(r),d=t,m=f["".concat(i,".").concat(d)]||f[d]||u[d]||o;return r?a.a.createElement(m,p(p({ref:n},s),{},{components:r})):a.a.createElement(m,p({ref:n},s))}));function m(e,n){var r=arguments,t=n&&n.mdxType;if("string"==typeof e||t){var o=r.length,i=new Array(o);i[0]=d;var p={};for(var c in n)hasOwnProperty.call(n,c)&&(p[c]=n[c]);p.originalType=e,p.mdxType="string"==typeof e?e:t,i[1]=p;for(var s=2;s<o;s++)i[s]=r[s];return a.a.createElement.apply(null,i)}return a.a.createElement.apply(null,r)}d.displayName="MDXCreateElement"}}]);